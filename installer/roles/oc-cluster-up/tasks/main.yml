---

- set_fact:
    is_private_ip: "{{ '192.168' in cluster_public_ip }}"

- debug:
    msg: "is_private_ip {{is_private_ip}}"

- name: Create alias for lo0 (macos)
  shell: ifconfig lo0 alias {{ cluster_public_hostname }}
  become: yes
  changed_when: false
  when: ansible_os_family == "Darwin" and is_private_ip|bool

- name: Create alias for lo0 (linux)
  shell: ifconfig lo:0 {{ cluster_public_hostname }} netmask 255.255.255.0 up
  become: yes
  changed_when: false
  when:
    - cluster_local_instance
    - ansible_os_family in ["RedHat", "Debian"] and is_private_ip|bool

- set_fact:
    routing_suffix: "{{ cluster_public_ip }}.{{ wildcard_dns_host }}"
    public_hostname: "{{ cluster_public_hostname }}"

- name: Obtain status of oc cluster
  shell: oc cluster status
  register: oc_cluster_status
  failed_when:
  - oc_cluster_status.rc != 0
  - oc_cluster_status.stdout.find('OpenShift cluster is not running') == -1
  changed_when: false

- block:
  - set_fact:
      cluster_up_command: oc cluster up

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --metrics"
    when:
    - hawkular_metrics|bool

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --service-catalog={{ service_catalog }}"
    when:
    - service_catalog|bool

  - name: Obtain host config directory with allowed format
    shell: "cd {{ host_config_dir }} && pwd"
    register: host_config_dir_pwd

  - set_fact:
      host_config_abs_dir: "{{ host_config_dir_pwd.stdout }}"

  - debug: msg="Host config dir is {{ host_config_abs_dir }}"

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --host-data-dir={{ host_config_abs_dir }}/openshift-data"

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --use-existing-config={{ use_existing_config }}"
    when:
    - use_existing_config|bool

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --routing-suffix={{ routing_suffix }}"
    when:
    - routing_suffix is defined
    - routing_suffix != ''

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --public-hostname={{ public_hostname }}"
    when:
    - public_hostname is defined
    - public_hostname != ''

  - set_fact:
      cluster_up_command: "{{ cluster_up_command }} --version={{ cluster_version }} --image={{ cluster_image }}"
    when:
    - cluster_version is defined
    - cluster_version != ''

  - debug: msg="Executing oc cluster up command - {{ cluster_up_command }}"

  - name: Cluster up
    shell: "{{ cluster_up_command }}"
    register: oc_cluster_up
    changed_when: false
  when: oc_cluster_status.stdout.find('OpenShift cluster is not running') > -1
